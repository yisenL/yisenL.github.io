(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{275:function(t,a,e){"use strict";e.r(a);var n=e(13),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ts常用语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts常用语法"}},[t._v("#")]),t._v(" ts常用语法")]),t._v(" "),a("h2",{attrs:{id:"keyof-和-in"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keyof-和-in"}},[t._v("#")]),t._v(" keyof 和 in")]),t._v(" "),a("h3",{attrs:{id:"keyof-获取-interface-的键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keyof-获取-interface-的键"}},[t._v("#")]),t._v(" keyof：获取 interface 的键")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('用法：\ninterface Point {\n  x: number;\n  y: number;\n}\n\ntype keys = keyof Point;\n// type keys = "x" | "y"\n')])])]),a("h3",{attrs:{id:"in-遍历枚举类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in-遍历枚举类型"}},[t._v("#")]),t._v(" in：遍历枚举类型")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('用法：\ntype Keys = "a" | "b"\ntype Obj =  {\n  [p in Keys]: any\n} // -> { a: any, b: any }\n')])])]),a("h2",{attrs:{id:"required-partial"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#required-partial"}},[t._v("#")]),t._v(" Required & Partial")]),t._v(" "),a("h3",{attrs:{id:"required-将类型中所有选项变为必选-去除所有"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#required-将类型中所有选项变为必选-去除所有"}},[t._v("#")]),t._v(" Required：将类型中所有选项变为必选，去除所有？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("type Required<T> = {\n  [P in keyof T]-?: T[P];\n};\n\n用法：\ninterface RequiredContact= Required<Contact>\n")])])]),a("h3",{attrs:{id:"partial-将类型中所有选项变为可选-即加上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#partial-将类型中所有选项变为可选-即加上"}},[t._v("#")]),t._v(" Partial：将类型中所有选项变为可选，即加上？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("type Partial<T> = { [P in keyof T]?: T[P] };\n上面语句的意思是 keyof T 拿到 T 所有属性名，然后 in 进行遍历，将值赋给 P，最后 T[P] 取得相应属性的值\n\n用法：\ninterface PartialContact= Partial<Contact>\n")])])]),a("h2",{attrs:{id:"pick-omit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pick-omit"}},[t._v("#")]),t._v(" Pick & Omit")]),t._v(" "),a("h3",{attrs:{id:"pick-选择其中属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pick-选择其中属性"}},[t._v("#")]),t._v(" Pick：选择其中属性")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("type Pick<T, K extends keyof T> = {\n    [P in K]: T[P];\n};\n\n用法：\ninterface ContactPick extends Pick<Contact, 'name' | 'phone'> {}\ntype ProduceParams = Pick<MemberListParams, 'productName' | 'productSku'>\n")])])]),a("h3",{attrs:{id:"omit-剔除其中属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#omit-剔除其中属性"}},[t._v("#")]),t._v(" Omit：剔除其中属性")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("type Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>\n\n用法：\ntype OmitEmailContact = Omit<Contact, 'email' | 'phone'>\ninterface ContactPick extends Omit<Contact, 'name' | 'phone'> {}\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);